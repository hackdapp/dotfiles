// Place your key bindings in this file to override the defaultsauto[]
[{
    "key": "cmd+w",
    "command": "-workbench.action.closeWindow",
    "when": "!editorIsOpen && !multipleEditorGroups"
  },
  {
    "key": "shift+cmd+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "shift+cmd+w",
    "command": "workbench.action.closeAllGroups"
  },
  {
    "key": "cmd+l",
    "command": "HookyQR.beautifyFile"
  },
  {
    "key": "shift+cmd+l",
    "command": "HookyQR.beautify"
  },
  {
    "key": "shift+cmd+i",
    "command": "openInTerminal"
  }, {
    "key": "ctrl+shift+alt+cmd+1",
    "command": "workbench.action.tasks.runTask",
    "args": "RestartNewChain"
  }, {
    "key": "ctrl+shift+alt+cmd+2",
    "command": "workbench.action.tasks.runTask",
    "args": "RestartOldChain"
  }, {
    "key": "ctrl+shift+alt+cmd+3",
    "command": "workbench.action.tasks.runTask",
    "args": "StopChain"
  }, {
    "key": "ctrl+shift+r",
    "command": "workbench.action.tasks.runTask",
    "args": "DeployContract"
  }, {
    "key": "ctrl+shift+c",
    "command": "workbench.action.tasks.runTask",
    "args": "CompileContract"
  },
  {
    "key": "ctrl+shift+t",
    "command": "workbench.action.tasks.runTask",
    "args": "jesttest"
  },
  {
    "key": "shift+cmd+w",
    "command": "workbench.action.closeWindow"
  },
  {
    "key": "shift+cmd+w",
    "command": "-workbench.action.closeWindow"
  },

  {
    "key": "shift+cmd+f2",
    "command": "git.ignore"
  },
  {
    "key": "shift+cmd+w",
    "command": "workbench.action.closeAllEditors"
  },
  {
    "key": "cmd+k cmd+w",
    "command": "-workbench.action.closeAllEditors"
  },
  {
    "key": "ctrl+g",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+up",
    "command": "io.orta.jest.run-test"
  },
  {
    "key": "ctrl+cmd+o",
    "command": "projectManager.open"
  },
  {
    "key": "shift+cmd+k",
    "command": "-git.pushTo",
    "when": "!inDebugMode && !terminalFocus"
  },
  {
    "key": "ctrl+cmd+up",
    "command": "git.push"
  },
  {
    "key": "ctrl+cmd+down",
    "command": "git.pull"
  },
  {
    "key": "ctrl+shift+cmd+s",
    "command": "git.stageAll"
  },
  {
    "key": "ctrl+cmd+u",
    "command": "editor.action.transformToLowercase"
  },
  {
    "key": "ctrl+shift+cmd+u",
    "command": "editor.action.transformToUppercase"
  },
  {
    "key": "ctrl+cmd+s",
    "command": "git.stageSelectedRanges"
  },
  {
    "key": "ctrl+j",
    "command": "-editor.action.joinLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+j",
    "command": "editor.action.joinLines"
  },
  {
    "key": "cmd+k cmd+k",
    "command": "editor.action.goToDeclaration",
    "when": "editorHasDefinitionProvider && editorTextFocus"
  },
  {
    "key": "cmd+b",
    "command": "-editor.action.goToDeclaration",
    "when": "editorHasDefinitionProvider && editorTextFocus"
  },
  {
    "key": "cmd+b",
    "command": "-markdown.extension.editing.toggleBold",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+cmd+enter",
    "command": "workbench.action.navigateLast"
  },
  {
    "key": "cmd+v",
    "command": "-markdown.extension.editing.paste",
    "when": "editorHasSelection && editorTextFocus && editorLangId == 'markdown'"
  },
  {
    "key": "backspace",
    "command": "-markdown.extension.onBackspaceKey",
    "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown' && vim.mode != 'CommandlineInProgress' && vim.mode != 'EasyMotionInputMode' && vim.mode != 'EasyMotionMode' && vim.mode != 'Normal' && vim.mode != 'Replace' && vim.mode != 'SearchInProgressMode' && vim.mode != 'SurroundInputMode' && vim.mode != 'Visual' && vim.mode != 'VisualBlock' && vim.mode != 'VisualLine'"
  },
  {
    "key": "cmd+i",
    "command": "-markdown.extension.editing.toggleItalic",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+k v",
    "command": "-markdown.extension.togglePreviewToSide",
    "when": "!terminalFocus"
  },
  {
    "key": "shift+cmd+v",
    "command": "-markdown.extension.togglePreview",
    "when": "!terminalFocus"
  },
  {
    "key": "tab",
    "command": "-markdown.extension.onTabKey",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "shift+enter",
    "command": "-markdown.extension.onShiftEnterKey",
    "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "shift+tab",
    "command": "-markdown.extension.onShiftTabKey",
    "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus && !hasOtherSuggestions && !hasSnippetCompletions && !inSnippetMode && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+m",
    "command": "-markdown.extension.editing.toggleMath",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "alt+c",
    "command": "-markdown.extension.checkTaskList",
    "when": "editorTextFocus && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+[",
    "command": "-markdown.extension.editing.toggleHeadingDown",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+]",
    "command": "-markdown.extension.editing.toggleHeadingUp",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "alt+s",
    "command": "-markdown.extension.editing.toggleStrikethrough",
    "when": "editorTextFocus && !editorReadonly && !isMac && editorLangId == 'markdown'"
  },
  {
    "key": "shift+alt+down",
    "command": "-markdown.extension.onCopyLineDown",
    "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "shift+alt+up",
    "command": "-markdown.extension.onCopyLineUp",
    "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+enter",
    "command": "-markdown.extension.onCtrlEnterKey",
    "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "enter",
    "command": "-markdown.extension.onEnterKey",
    "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown' && vim.mode != 'CommandlineInProgress' && vim.mode != 'EasyMotionInputMode' && vim.mode != 'EasyMotionMode' && vim.mode != 'Normal' && vim.mode != 'Replace' && vim.mode != 'SearchInProgressMode' && vim.mode != 'SurroundInputMode' && vim.mode != 'Visual' && vim.mode != 'VisualBlock' && vim.mode != 'VisualLine'"
  },
  {
    "key": "cmd+]",
    "command": "-markdown.extension.onIndentLines",
    "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "alt+down",
    "command": "-markdown.extension.onMoveLineDown",
    "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "alt+up",
    "command": "-markdown.extension.onMoveLineUp",
    "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "cmd+[",
    "command": "-markdown.extension.onOutdentLines",
    "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'"
  }
]
